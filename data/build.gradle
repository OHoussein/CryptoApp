plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-kapt"
    id "com.github.ben-manes.versions"
    id "com.adarshr.test-logger"
    id "io.gitlab.arturbosch.detekt"
}

apply from: "$rootDir/gradle/scripts/detekt.gradle"

android {
    compileSdkVersion AndroidSdk.compileSdk

    defaultConfig {
        minSdkVersion AndroidSdk.minSdk
        targetSdkVersion AndroidSdk.targetSdk
        versionCode AppVersion.versionCode
        versionName AppVersion.versionName

        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //TO-DO add signing keys
            signingConfig debug.signingConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = [
                    "-XXLanguage:+InlineClasses",
                    "-Xopt-in=kotlin.RequiresOptIn",
            ]
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':common')

    implementation Libs.kotlinStdlib
    implementation Libs.retofit
    implementation Libs.retofitConverter
    implementation Libs.coroutinesCore
    implementation Libs.annotation

    implementation Libs.room
    implementation Libs.roomRuntime
    kapt Libs.roomCompiler

    implementation project(path: ':commonTest')
    testImplementation TestLibs.junit
    testImplementation TestLibs.coroutinesTest
    testImplementation TestLibs.mockito
    testImplementation TestLibs.mockitoInline
    testImplementation TestLibs.mockWebserver

    testImplementation TestLibs.robolectric
    //To Use livedata in room with robolectric tests
    testImplementation Libs.lifecycleLiveData
    testImplementation AndroidTestLibs.testCoreKtx
    testImplementation TestLibs.archCoreTesting
    testImplementation AndroidTestLibs.roomTestHelper

    dependencyUpdates.resolutionStrategy = dependencyUpdatesStrategy
}