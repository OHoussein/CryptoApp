plugins {
    id 'com.android.application'
    id "kotlin-android"
    id "kotlin-parcelize"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
    id "com.github.ben-manes.versions"
    id "com.adarshr.test-logger"
    id "io.gitlab.arturbosch.detekt"
    id 'org.jetbrains.kotlin.android'
}

apply from: "$rootDir/gradle/scripts/detekt.gradle"

android {
    compileSdkVersion AndroidSdk.compileSdk
    defaultConfig {
        applicationId AppVersion.applicationId
        minSdkVersion AndroidSdk.minSdk
        targetSdkVersion AndroidSdk.targetSdk
        versionCode AppVersion.versionCode
        versionName AppVersion.versionName
        testInstrumentationRunner "dev.ohoussein.cryptoapp.MyTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //TO-DO signing keys
            signingConfig debug.signingConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = [
                    "-XXLanguage:+InlineClasses",
                    "-Xopt-in=kotlin.RequiresOptIn",
            ]
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    lintOptions {
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.2.0-rc02" /*Libs.Versions.compose*/
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            force("org.objenesis:objenesis:2.6")
        }
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation project(path: ':data')
    implementation project(path: ':crypto:presentation')

    //Common
    implementation Libs.kotlinStdlib
    implementation Libs.coroutinesCore
    implementation Libs.coroutinesAndroid
    implementation Libs.timber
    implementation Libs.hiltAndroid

    kapt Libs.hiltCompiler
    kapt Libs.hiltAndroidCompiler

    //Presentation
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.lifecycle
    implementation Libs.lifecycleViewModel
    implementation Libs.lifecycleRuntime
    implementation Libs.lifecycleLiveData
    //compose
    implementation Libs.composeUI
    implementation Libs.composeMaterial
    implementation Libs.composeMaterialIconExtended
    implementation(Libs.composeUITooling)
    implementation Libs.composeActivity
    implementation Libs.composeLivedata
    implementation Libs.composeHiltViewModel
    implementation Libs.composeNavigation

    //Data
    implementation Libs.retofit
    implementation Libs.retofitConverter
    implementation Libs.roomRuntime

    //Debug tools
    debugImplementation DebugLibs.stetho
    debugImplementation DebugLibs.stethoOkhttp
    debugImplementation DebugLibs.okhttpLogging

    //Android tests
    androidTestImplementation TestLibs.hiltAndroid
    kaptAndroidTest TestLibs.hiltAndroidCompiler
    debugImplementation AndroidTestLibs.testCore
    androidTestImplementation AndroidTestLibs.testCoreKtx
    androidTestImplementation AndroidTestLibs.androidJUnit
    androidTestImplementation AndroidTestLibs.androidJUnitKtx
    androidTestImplementation AndroidTestLibs.rules
    androidTestImplementation AndroidTestLibs.espresso
    //androidTestImplementation TestLibs.mockito
    androidTestImplementation AndroidTestLibs.mockitoAndroid
    androidTestImplementation TestLibs.junit
    androidTestImplementation TestLibs.archCoreTesting
    androidTestImplementation TestLibs.coroutinesTest
    androidTestImplementation AndroidTestLibs.composeTesting
    debugImplementation AndroidTestLibs.composeTestingManifest

    //Unit tests
    testImplementation project(path: ':core:test')
    testImplementation TestLibs.hiltAndroid
    kaptTest TestLibs.hiltAndroidCompiler
    testImplementation TestLibs.mockito
    //testImplementation TestLibs.mockitoInline
    testImplementation TestLibs.junit
    testImplementation TestLibs.archCoreTesting
    testImplementation TestLibs.coroutinesTest

    dependencyUpdates.resolutionStrategy = dependencyUpdatesStrategy
}
